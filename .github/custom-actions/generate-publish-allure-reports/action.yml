name: generate-publish-allure-reports
description: Generates and publishes allure reports back to github

inputs:
  token:
    description: Github token
    required: true
  allure-cli-version:
    description: What version of allure cli to use
    required: false
    default: "2.30.0"
  allure-results-dir:
    description: The relative directory from workspace that contains the allure results generated by running the tests
    required: false
    default: allure-results
  publish-branch:
    description: The branch to which the reports are to be published into
    required: false
    default: gh-pages
  
runs:
  using: "composite"
  steps:
      - name: Set up JDK 11 for x64
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Read from cache
        id: cache-read
        uses: actions/cache/restore@v3
        with:
            path: ${{ github.workspace }}/allure-cli
            key: ${{ runner.os }}-allure-cli

      - name: Use allure-binary from cache
        if: steps.cache-read.outputs.cache-hit == 'true'
        shell: bash
        run: |
          echo "Found the allure cli binary in the cache"
          ${{ github.workspace }}/allure-cli/allure-${{ inputs.allure-cli-version }}/bin/allure --version

      - name: Download binary from internet
        shell: bash
        if: steps.cache-read.outputs.cache-hit != 'true'
        run: |
          version=${{ inputs.allure-cli-version }}
          mvn_base=https://repo1.maven.org/maven2
          mvn -Ddownload.outputDirectory=. \
          -Ddownload.url=$mvn_base/io/qameta/allure/allure-commandline/$version/allure-commandline-$version.tgz \
          -Ddownload.outputFileName=allure-commandline \
          com.googlecode.maven-download-plugin:download-maven-plugin:1.9.0:wget
          echo "[DEBUG] Binary downloaded from the net"

          cli_dir=${{ github.workspace }}/allure-cli
          mkdir -p $cli_dir

          tar -xvf allure-commandline -C $cli_dir
          echo "[DEBUG] Allure CLI has been untarred to " $cli_dir
          ls -ltr $cli_dir

          location=$cli_dir/allure-$version/bin/allure

          chmod +x $location
          echo "[DEBUG] Added execution permission to binary"

          $location --version

      - name: Push binary back to cache
        if: steps.cache-read.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
            path: ${{ github.workspace }}/allure-cli
            key: ${{ runner.os }}-allure-cli

      - name: Get Allure history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
            ref: gh-pages
            path: allure-run-results

      - name: Generate reports
        shell: bash
        if: always()
        run: |
          local_dir=${{ github.workspace }}/allure-run-results
          if [ -d "$local_dir" ]; then
            cd $local_dir
            echo "[DEBUG] List contents of " $local_dir
            ls -ltr $local_dir
            result=$([ "$(ls -A)" ] && ls -d */ || echo "EMPTY")
            if [ "$result" != "EMPTY" ]; then
              largest_dir=$(ls -d */ | sed 's/\/$//' | sort -n | tail -n 1)
              cd $largest_dir
              cp -r history ${{ github.workspace }}/${{ inputs.allure-results-dir }}
            else
              echo "[DEBUG] " $local_dir " is empty"
            fi
          else
            echo "[DEBUG] " $local_dir " does not exist"
          fi

          cli=${{ github.workspace }}/allure-cli/allure-${{ inputs.allure-cli-version }}/bin/allure

          echo "[DEBUG] Generating the reports"
          destination=$local_dir/${{ github.run_number }}
          mkdir -p $destination
          $cli generate ${{ github.workspace }}/${{ inputs.allure-results-dir }} -o $destination --clean

          echo "[DEBUG] Completed generating reports in " $destination

          html_content='<!DOCTYPE html><html lang="en">
          <head>
          <meta charset="UTF-8">
          <meta http-equiv="refresh" content="0;url=${{ github.run_number }}/index.html">
          <title>Redirecting...</title>
          </head>
          </body>
          </html>'

          # Write the content to an HTML file
          echo "$html_content" > ${{ github.workspace }}/allure-run-results/index.html

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          PERSONAL_TOKEN: ${{ inputs.token }}
          PUBLISH_BRANCH: ${{ inputs.publish-branch }}
          PUBLISH_DIR: ./allure-run-results